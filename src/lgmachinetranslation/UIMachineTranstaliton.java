/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package lgmachinetranslation;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.*;

/**
 *
 * @author acer
 */
public class UIMachineTranstaliton extends javax.swing.JFrame {

    /**
     * Creates new form UIMachineTranstaliton
     */
    public UIMachineTranstaliton() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        InputTextArea = new javax.swing.JTextArea();
        SplitButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TranslateTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        InputTextArea.setColumns(20);
        InputTextArea.setLineWrap(true);
        InputTextArea.setRows(5);
        jScrollPane1.setViewportView(InputTextArea);

        SplitButton.setText("Split");
        SplitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SplitButtonActionPerformed(evt);
            }
        });

        TranslateTextArea.setColumns(20);
        TranslateTextArea.setRows(5);
        jScrollPane2.setViewportView(TranslateTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SplitButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SplitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SplitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SplitButtonActionPerformed
        // TODO add your handling code here:
        try {
            Prunning p = new Prunning(DBConnection.getInstance().getConnection());
            Parsing par = new Parsing();
            String[] input = InputTextArea.getText().split("\\s");
            String parser[][][]=new String[100][100][3];
            int count = 0, i, j;
            int counterParse[]=new int[100];
            String word;
            /*for (i = 0; i < input.length; i++) {
                
                for (j = i + 1; j < input.length; j++) {
                    if (input[i].equals(input[j])) {
                        sama[i] = true;
                        sama[j] = false;
                    }
                    else if(!input[i].equals(input[j])){
                        sama[i] = true;
                    }
                }
            }*/
            for (i = 0; i < input.length; i++) {
                    word = input[i];
                    count = p.getCount(word);
                    counterParse[i]=count;
                    //System.out.println(word);
                    //System.out.println(p.getCount(word));
                    for (j = 0; j < count; j++) {
                        parser[i][j][0]=p.getPrunning(word)[j][0];
                        parser[i][j][1]=p.getPrunning(word)[j][1];
                        parser[i][j][2]=p.getPrunning(word)[j][2];
                        TranslateTextArea.append(parser[i][j][0] + " ");
                        TranslateTextArea.append(parser[i][j][1] + " ");
                        TranslateTextArea.append(parser[i][j][2] + "\n");
                    }
            }
            for(i=0;i<input.length;i++){
                     TranslateTextArea.append("hasil parsing ke-"+i+" "+par.setParsing(parser, input.length, counterParse[i])[i][0]+"\n");
                     TranslateTextArea.append("hasil parsing ke-"+i+" "+par.setParsing(parser, input.length, counterParse[i])[i][1]+"\n");
                     TranslateTextArea.append("hasil parsing ke-"+i+" "+par.setParsing(parser, input.length, counterParse[i])[i][2]+"\n");
            }
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_SplitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UIMachineTranstaliton.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UIMachineTranstaliton.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UIMachineTranstaliton.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UIMachineTranstaliton.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new UIMachineTranstaliton().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea InputTextArea;
    private javax.swing.JButton SplitButton;
    private javax.swing.JTextArea TranslateTextArea;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
